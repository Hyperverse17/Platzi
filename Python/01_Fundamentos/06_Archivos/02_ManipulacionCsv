
import csv # Biblioteca para trabajar con csv

filePath = "Fundamentos/06_Archivos/"
fileName = "products.csv"
filePointer = filePath + fileName

# Ejemplo 1: Lectura Básica
with open(filePointer,mode='r') as mainFile:
    for fileRow in mainFile:
        pass
        #print(fileRow)

# Ejemplo 2: Vaciado de la informacion en un diccionario
with open(filePointer, mode = 'r') as mainFile:
    dictFile = csv.DictReader(mainFile) # El método .DictReader(file) regresa file como diccionario
    for dictRow in dictFile: # en este ejemplo fileRow toma la forma <llave> : <valor>, por lo que es necesario especificar las llaves y valores que deseamos usar
        pass
        #print(f"{dictRow['name']} - Precio: {dictRow['price']}")


# Ejemplo 3: Adición de una nueva linea:
# En este caso estamos trabajando con un csv que contiene nombres de columnas (llaves)
# Es preciso definir la nueva entrada como un diccionario y respetando los mismos nombres de las llaves

newProduct = {
    'name': 'Wireless Charger',
    'price': '75',
    'quantity': 100,
    'brand': 'MarcaX',
    'category': 'Accesories',
    'entryDate': '2025-01-24'
}

with open(filePointer, mode = 'a', newline = '') as dictFile2: # Modo a de append
    dictWriterFile = csv.DictWriter(dictFile2, fieldnames = newProduct.keys()) # Método DictWriter() Se apela a las llaves definidas en el diccionario creado
    dictFile2.write("\n") # Si no se escribe antes un salto de linea, la nueva informacion se escribira mal
    dictWriterFile.writerow(newProduct)

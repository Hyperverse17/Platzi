
Los conjuntos en Python poseen varias propiedades únicas que debes tener en cuenta:

Modificabilidad: Puedes modificar un conjunto agregando, eliminando o uniendo elementos con otros conjuntos.
Desorden: Los elementos en un conjunto no tienen un orden específico. Por ejemplo, el orden Colombia, México, Bolivia es irrelevante.
No duplicados: Un conjunto no permite elementos duplicados. Si intentas agregar un duplicado, Python lo eliminará automáticamente.
¿Cómo se crean conjuntos en Python?
Crear conjuntos en Python es bastante sencillo y sigue una sintaxis que podría parecerse a la de un diccionario, pero con diferencias cruciales.

# Creación de un conjunto de países
set_countries = {"Colombia", "México", "Bolivia"}
print(set_countries)  # Mostrará los elementos del conjunto
print(type(set_countries))  # Verifica que es del tipo 'set'

¿Cómo funcionan los conjuntos con diferentes tipos de datos?
Un conjunto puede contener distintos tipos de datos, incluidos números, cadenas de texto y booleanos. Los elementos duplicados serán eliminados automáticamente.

# Conjunto con varios tipos de datos
set_types = {1, "texto", False, 3.14}
print(set_types)  # El orden en el resultado puede variar
¿Podemos crear conjuntos desde otras estructuras de datos?
Sí, puedes definir conjuntos a partir de una cadena de texto, una tupla o una lista.

Desde una cadena de texto
Cuando transformas un string a un conjunto, cada carácter individual es tratado como un elemento y los duplicados son eliminados.

# Conjunto a partir de un string
set_from_string = set("hola")
print(set_from_string)  # Sólo incluirá caracteres únicos
Desde una tupla
Puedes crear un conjunto a partir de una tupla de manera similar.

# Conjunto a partir de una tupla
set_from_tuple = set(("ABC", "DEF", "ABC"))
print(set_from_tuple)
Desde una lista
Convertir una lista a un conjunto elimina los elementos duplicados, lo cual es útil para obtener una lista de elementos únicos.

# Conjunto a partir de una lista
numbers = [1, 2, 3, 4, 1, 2]
unique_set = set(numbers)
print(unique_set)  # Sólo mostrará {1, 2, 3, 4}

# Convertir de nuevo a lista
unique_numbers = list(unique_set)
print(unique_numbers)  # Lista de números únicos
¿Qué ventajas ofrece usar conjuntos?
Utilizar conjuntos en Python te permite:

Eliminar duplicados rápidamente: Usar un conjunto sobre una colección eliminará automáticamente elementos duplicados.
Operaciones de conjuntos: Puedes realizar cómodamente operaciones como unión e intersección.
Optimización en búsqueda: Los conjuntos optimizan la búsqueda de elementos específicos.
Los conjuntos son una herramienta poderosa que te permitirá manejar grandes volúmenes de datos con facilidad y eficiencia. Continúa explorando sus capacidades y descubre cómo optimizar tus proyectos de desarrollo en Python.

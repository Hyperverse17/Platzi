
import functools

def logger(filePointer): # Permite recibir parámetros extra (en este caso el filepointer)
    """Decorador para funciones que no reciben parámetros pero que retornan valores"""
    def decorator(func): # Decorador
        @functools.wraps(func) # sirve para que la función decorada conserve su identidad original (nombre, docstring, etc.). Sin él, la función decorada parecería ser la función wrapper en lugar de la original.
        def wrapper():
            result = func() # En result se guarda el retorno de la función
            message = f"[LOG] {func.__name__} | Result: {result}" # Construcción del mensasje que se escribirá. N+otese el uso de func.__name__ (@functools.wraps)
            with open(filePointer, "a") as file:
                file.write(message + "\n")
            return result
        return wrapper
    return decorator
